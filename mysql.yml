version: '3'
services:
  masterDB:
    hostname: masterDB
    command: bash -c "cp /etc/mysql/master.cnf /etc/mysql/my.cnf && chown root /etc/mysql/my.cnf && chmod 644 /etc/mysql/my.cnf && docker-entrypoint.sh mysqld"
    image: mysql:debian
    container_name: "master"
    ports:
      - "3333:3306"
    environment:
      MYSQL_ROOT_PASSWORD: cxgs7102
    volumes:
      - ./master.cnf:/etc/mysql/master.cnf
      - ./master-scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cxgsnetwork


  slave1DB:
    hostname: slave1DB
    command: bash -c "cp /etc/mysql/slave1.cnf /etc/mysql/my.cnf && chown root /etc/mysql/my.cnf && chmod 644 /etc/mysql/my.cnf && docker-entrypoint.sh mysqld"
    image: mysql:debian
    container_name: "slave1"
    ports:
      - "3334:3306"
    environment:
      MYSQL_ROOT_PASSWORD: cxgs7102
    volumes:
      - ./slave1.cnf:/etc/mysql/slave1.cnf
      - ./master-scripts/replication.sql:/docker-entrypoint-initdb.d/replication.sql
    networks:
      - cxgsnetwork

  slave2DB:
    hostname: slave2DB
    command: bash -c "cp /etc/mysql/slave2.cnf /etc/mysql/my.cnf && chown root /etc/mysql/my.cnf && chmod 644 /etc/mysql/my.cnf && docker-entrypoint.sh mysqld"
    image: mysql:debian
    container_name: "slave2"
    ports:
      - "3335:3306"
    environment:
      MYSQL_ROOT_PASSWORD: cxgs7102
    volumes:
      - ./slave2.cnf:/etc/mysql/slave2.cnf
      - ./master-scripts/replication.sql:/docker-entrypoint-initdb.d/replication.sql
    networks:
      - cxgsnetwork

networks:
  cxgsnetwork:
    driver: bridge


    
